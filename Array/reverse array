Write a function that reverses a string. The input string is given as an array of characters char[].

Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.

You may assume all the characters consist of printable ascii characters.

 

Example 1:

Input: ["h","e","l","l","o"]
Output: ["o","l","l","e","h"]
Example 2:

Input: ["H","a","n","n","a","h"]
Output: ["h","a","n","n","a","H"]


Solution:
Approach 1-> Iterative 
class Solution {
public:
    void reverseString(vector<char>& s)
    {
        int left=0,right=s.size()-1;// s.size() gives the nukber of elements in an array
        
        while(left<=right)
        {
            char temp;
            temp=s[left];
            s[left]=s[right];
            s[right]=temp;
            left++;
            right--;
        }
        
    }
};
TC= O(n) . Since the whole array is travesed in a single scan
SC=O(1). No extra array is taken so constant space.

Appproach 2: Recursive 
