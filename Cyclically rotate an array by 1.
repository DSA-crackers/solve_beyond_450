Given an array, cyclically rotate an array by one.

Input:
The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case contains an integer n denoting the size of the array. Then following line contains 'n' integers forming the array. 

Output:
Output the cyclically rotated array by one.

Constraints:
1<=T<=1000
1<=N<=1000
0<=a[i]<=1000

Example:
Input:
2
5
1 2 3 4 5
8
9 8 7 6 4 2 1 3

Output:
5 1 2 3 4
3 9 8 7 6 4 2 1


Solution ->

# include <iostream>
using namespace std;

void rotate(int arr[], int n)
{
    int x = arr[n - 1], i;
    for (i = n - 1; i > 0; i--)
    arr[i] = arr[i - 1]; 
    arr[0] = x;
}

// Driver code
int main() 
{
    int arr[] = {1,6,5,4,7,8,2,5,9}, i;
    int n = sizeof(arr) / 
            sizeof(arr[0]);

    
    for (i = 0; i < n; i++)
        cout << arr[i];

    rotate(arr, n);

    
    for (i = 0; i < n; i++)
        cout << arr[i];

    return 0;
}
